AWSTemplateFormatVersion: 2010-09-09
Description: 'System Operations for AWS Lab 1: Using AWS Systems Manager'

Parameters:

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: Keyname for the keypair that Qwiklab will use to launch EC2 instances
    Default: default-lab-key

  AmazonLinuxAMIID:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2

Resources:

  ###########
  # VPC with Internet Gateway
  ###########

  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: true
      EnableDnsHostnames: true
      Tags:
        - Key: Name
          Value: Lab VPC

  IGW:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: Lab IGW

  VPCtoIGWConnection:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref IGW
      VpcId: !Ref VPC

  ###########
  # Public Route Table
  ###########

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Public Route Table

  PublicRoute:
    Type: AWS::EC2::Route
    Properties:
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref IGW
      RouteTableId: !Ref PublicRouteTable

  ###########
  # Public Subnet
  ###########

  PublicSubnet:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      MapPublicIpOnLaunch: true
      CidrBlock: 10.0.0.0/24
      AvailabilityZone: !Select
        - 0
        - !GetAZs
          Ref: AWS::Region
      Tags:
        - Key: Name
          Value: Public Subnet

  PublicRouteTableAssociation1:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet

  ###########
  # IAM Role for App Server
  ###########

  AppRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: App-Role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - ssm.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        # Updated to modern SSM policy
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/AmazonEC2ReadOnlyAccess

  AppInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      Path: /
      Roles:
        - !Ref AppRole
      InstanceProfileName: App-Role

  ###########
  # Security Group for App Server
  ###########

  AppSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable HTTP ingress
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: App Server Security Group

  ###########
  # App Server
  ###########

  SSMInstance:
    Type: AWS::EC2::Instance
    Properties:
      KeyName: !Ref KeyName
      IamInstanceProfile: !Ref AppInstanceProfile
      ImageId: !Ref AmazonLinuxAMIID
      InstanceType: t2.micro
      SubnetId: !Ref PublicSubnet
      SecurityGroupIds:
        - !Ref AppSecurityGroup
      Tags:
        - Key: Name
          Value: Managed Instance
      UserData: !Base64
        Fn::Sub: |
          #!/bin/bash
          yum -y update

  ###########
  # Lambda Role (for optional parameter cleanup)
  ###########

  LambdaVPCRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: LambdaVPC-Role
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Policies:
        - PolicyName: SSMCleanup
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - ssm:*
                  - ec2:Describe*
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                Resource: '*'

  ###########
  # SSM Document for App Installation
  ###########

  InstallDashboardApp:
    Type: AWS::SSM::Document
    Properties:
      DocumentType: Command
      Content:
        schemaVersion: '2.2'
        description: Install Dashboard App
        mainSteps:
          - name: InstallDashboardApp
            action: aws:runShellScript
            inputs:
              runCommand:
                - '#!/bin/bash'
                - 'yum install -y httpd'
                - 'amazon-linux-extras install -y php7.2'
                - 'systemctl enable httpd.service'
                - 'systemctl start httpd.service'
                - 'wget https://github.com/aws/aws-sdk-php/releases/download/3.62.3/aws.zip -O /tmp/aws.zip'
                - 'unzip /tmp/aws.zip -d /var/www/html'
                - 'wget https://aws-tc-largeobjects.s3.us-west-2.amazonaws.com/ILT-TF-200-ACSOPS-1/lab-1-ssm/widget-app.zip -O /tmp/widget-app.zip'
                - 'unzip /tmp/widget-app.zip -d /var/www/html/'

Outputs:

  ServerIP:
    Description: Public IP of the Managed Instance
    Value: !GetAtt SSMInstance.PublicIp
